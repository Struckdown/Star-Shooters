[gd_resource type="VisualShader" load_steps=17 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarUniform" id=1]
uniform_name = "SpeedMultiplier"

[sub_resource type="VisualShaderNodeTexture" id=2]
source = 2
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
function = 0

[sub_resource type="VisualShaderNodeScalarConstant" id=4]
constant = 1.0

[sub_resource type="VisualShaderNodeVectorOp" id=5]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=6]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVec3Constant" id=7]
constant = Vector3( 1, 1, 0 )

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 0.1 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=9]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=13]

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=15]

[resource]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Vector:17
	vec3 n_out17p0 = vec3(1.000000, 1.000000, 0.000000);

// Input:3
	float n_out3p0 = TIME;

// VectorOp:15
	vec3 n_out15p0 = n_out17p0 * vec3(n_out3p0);

// ScalarOp:18
	float n_in18p1 = 0.10000;
	float n_out18p0 = dot(n_out15p0, vec3(0.333333, 0.333333, 0.333333)) * n_in18p1;

// VectorOp:19
	vec3 n_out19p0 = n_out2p0 * vec3(n_out18p0);

// Texture:11
	vec3 n_out11p0;
	float n_out11p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out19p0.xy);
		n_out11p0 = _tex_read.rgb;
		n_out11p1 = _tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out11p0;

}

void light() {
// Output:0

}
"
custom_defines = ""
graph_offset = Vector2( -129, -96 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 900, 140 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( -420, 40 )
nodes/fragment/3/node = SubResource( 11 )
nodes/fragment/3/position = Vector2( -500, 300 )
nodes/fragment/4/node = SubResource( 12 )
nodes/fragment/4/position = Vector2( 20, 320 )
nodes/fragment/6/node = SubResource( 13 )
nodes/fragment/6/position = Vector2( -60, -80 )
nodes/fragment/7/node = SubResource( 14 )
nodes/fragment/7/position = Vector2( 220, -60 )
nodes/fragment/9/node = SubResource( 15 )
nodes/fragment/9/position = Vector2( 380, -60 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -220, 400 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 680, 160 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( -200, 300 )
nodes/fragment/14/node = SubResource( 4 )
nodes/fragment/14/position = Vector2( -200, 260 )
nodes/fragment/15/node = SubResource( 5 )
nodes/fragment/15/position = Vector2( -280, 140 )
nodes/fragment/16/node = SubResource( 6 )
nodes/fragment/16/position = Vector2( 280, 300 )
nodes/fragment/17/node = SubResource( 7 )
nodes/fragment/17/position = Vector2( -640, 160 )
nodes/fragment/18/node = SubResource( 8 )
nodes/fragment/18/position = Vector2( -20, 140 )
nodes/fragment/19/node = SubResource( 9 )
nodes/fragment/19/position = Vector2( 239, 114 )
nodes/fragment/connections = PoolIntArray( 2, 0, 6, 0, 10, 0, 4, 1, 11, 0, 0, 0, 3, 0, 13, 0, 3, 0, 4, 0, 3, 0, 16, 0, 17, 0, 15, 0, 3, 0, 15, 1, 15, 0, 18, 0, 18, 0, 19, 1, 2, 0, 19, 0, 19, 0, 11, 0 )
