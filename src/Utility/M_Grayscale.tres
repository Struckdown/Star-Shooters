[gd_resource type="ShaderMaterial" load_steps=9 format=2]

[sub_resource type="VisualShaderNodeTexture" id=1]
source = 2

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=4]

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 3.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=6]

[sub_resource type="VisualShaderNodeVectorCompose" id=7]

[sub_resource type="VisualShader" id=8]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:11
	vec3 n_out11p0 = vec3(UV, 0.0);

// Texture:10
	vec3 n_out10p0;
	float n_out10p1;
	{
		vec4 _tex_read = texture(TEXTURE, n_out11p0.xy);
		n_out10p0 = _tex_read.rgb;
		n_out10p1 = _tex_read.a;
	}

// VectorDecompose:3
	float n_out3p0 = n_out10p0.x;
	float n_out3p1 = n_out10p0.y;
	float n_out3p2 = n_out10p0.z;

// ScalarOp:4
	float n_out4p0 = n_out3p0 + n_out3p1;

// ScalarOp:7
	float n_out7p0 = n_out4p0 + n_out3p2;

// ScalarOp:5
	float n_in5p1 = 3.00000;
	float n_out5p0 = n_out7p0 / n_in5p1;

// VectorCompose:8
	vec3 n_out8p0 = vec3(n_out5p0, n_out5p0, n_out5p0);

// Output:0
	COLOR.rgb = n_out8p0;
	COLOR.a = n_out10p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -536.405, -27.75 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1040, 360 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( -140, 160 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( 160, 60 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( 560, 200 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( 300, 200 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 760, 200 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -220, 360 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -440, 380 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 3, 1, 4, 1, 4, 0, 7, 0, 3, 2, 7, 1, 7, 0, 5, 0, 5, 0, 8, 0, 5, 0, 8, 1, 5, 0, 8, 2, 10, 0, 3, 0, 10, 1, 0, 1, 8, 0, 0, 0, 11, 0, 10, 0 )

[resource]
shader = SubResource( 8 )
