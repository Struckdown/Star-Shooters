[gd_scene load_steps=4 format=2]

[ext_resource path="res://Hostiles/Bullets/Bullet_Base.tscn" type="PackedScene" id=1]
[ext_resource path="res://Space Shooter Redux/PNG/Lasers/laserBlue08.png" type="Texture" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends \"res://Hostiles/Bullets/Bullet_Base.gd\"

var hasWrapped = false
var bounds

# Called when the node enters the scene tree for the first time.
func _ready():
	bounds = get_viewport_rect().size

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	._process(delta)
	if outOfBounds():
		if hasWrapped:
			startFadeOut()
		else:
			wrap()

# check if out of bounds
func outOfBounds() -> bool:
	if position.x > bounds.x:
		return true
	if position.x < 0:
		return true
	if position.y < 0:
		return true
	if position.y > bounds.y:
		return true
	return false
	
func wrap() -> void:
	hasWrapped = true
	if position.x > bounds.x:
		position.x -= bounds.x
	if position.x < 0:
		position.x += bounds.x
	if position.y < 0:
		position.y += bounds.y
	if position.y > bounds.y:
		position.y -= bounds.y
"

[node name="Bullet_Wrapper" instance=ExtResource( 1 )]
script = SubResource( 1 )
moveSpeed = 200
waveStr = 0
waveSpeed = 10.0
generatesEnergy = false
energySprite = "res://Space Shooter Redux/PNG/Lasers/laserRed08.png"
titleScreenVersion = false
rotationSpeed = 360.0
nodeToRotate = NodePath("Sprite")
trackYFirst = false
canCauseDamage = true
diesOnOutOfBounds = true

[node name="Sprite" type="Sprite" parent="." index="0"]
scale = Vector2( 0.3, 0.3 )
texture = ExtResource( 3 )
